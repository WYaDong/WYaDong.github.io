<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yadong</title>
  
  <subtitle>性痴则其志凝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wyadong.github.io/"/>
  <updated>2019-12-31T09:59:11.017Z</updated>
  <id>https://wyadong.github.io/</id>
  
  <author>
    <name>yadong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年总结与2020规划</title>
    <link href="https://wyadong.github.io/2019/12/31/2019%E5%B9%B4%E6%80%BB%E7%BB%93%E4%B8%8E2020%E8%A7%84%E5%88%92/"/>
    <id>https://wyadong.github.io/2019/12/31/2019%E5%B9%B4%E6%80%BB%E7%BB%93%E4%B8%8E2020%E8%A7%84%E5%88%92/</id>
    <published>2019-12-31T08:24:53.000Z</published>
    <updated>2019-12-31T09:59:11.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><a id="more"></a><p>1.更换岗位</p><blockquote><p>做了两年的SDK开发太熟了,后面的工作内容都是体力活(新机型接入,更多细节换为C++),年底换个新岗位学点新东西</p></blockquote><p>2.能力提升</p><blockquote><p>SDK新增socket通信功能的开发、集成第三方打印机、C++接入.</p></blockquote><p>3.协同工作  </p><blockquote><p>SDK需要与多人沟通(n+app、n+app对应测试、n+硬件、c++、第三方机型厂家、机器芯片厂家)容易出现推诿责任的现象,每个人有不同的想法,众口难调.重要工作完全完成,顺利交接换岗.</p></blockquote><p>4.工作态度</p><blockquote><p>有段时间公司赶双十一,事比较多、那段时间心态不怎么好,对看不惯的现象表现太直接.后面还是要稳重一点,做好自己的工作,不扯那么多没用的</p></blockquote><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>1.旅游</p><blockquote><p>公司今年除了年会没组织啥活动、10.1七天与朋友去了一趟湖南.完全的自由行,从选地址、景点、路线经历了很多、累并快乐着</p></blockquote><p>2.阅读</p><blockquote><p>在微信读书读完了71本书、其他电子数加起来肯定上百本了,和技术相关的大概有20+本.除了技术方面的书,看的比较多的书有科幻(刘慈欣科幻全套)、战争、人物传记、经济方面的、物理方面(时间简史、量子力学等).好读书不求甚解</p></blockquote><p>3.提升自己</p><blockquote><p>7月份报名了一个考试,11月份没参加考试,今年努力考过去</p></blockquote><p>4.其他</p><blockquote><p>1.5月份付了首付买了房,还贷款真心累.给母亲和自己买了商业保险(之前每个月固定给母亲的生活费不给了、钱她不花、改了按需给.后期自己宽裕了再给补上)<br> 2.办了亲情卡给母亲用虽然中间经历过很多,承包家人话费开支<br> 3.游戏时间比去年减少了很多,偶尔玩玩娱乐一下</p></blockquote><h2 id="2020规划"><a href="#2020规划" class="headerlink" title="2020规划"></a>2020规划</h2><p>1.把证考了<br>2.抽时间出去旅游(不低于5天)<br>3.读点技术方面的书,学习点新东西(服务器、音视频和混合开发方面的),持续提升能力..<br>4.太较真了,把技术看的太重了,不去做一些迎合同事和朋友的事.公司朋友不多但都够真心.感觉都是成年人,还是喜欢简单,可能这也是没结婚对象的原因吧.后面注意下表达的方式,稍微圆滑一点,当然还会坚持自己</p><img src="/2019/12/31/2019年总结与2020规划/wxds.jpg" title="微信读书成绩单">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;工作&quot;&gt;&lt;a href=&quot;#工作&quot; class=&quot;headerlink&quot; title=&quot;工作&quot;&gt;&lt;/a&gt;工作&lt;/h2&gt;
    
    </summary>
    
    
      <category term="记录" scheme="https://wyadong.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="生活记录" scheme="https://wyadong.github.io/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>python中import和from-import的区别</title>
    <link href="https://wyadong.github.io/2019/12/24/python%E4%B8%ADimport%E5%92%8Cfrom-import%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://wyadong.github.io/2019/12/24/python%E4%B8%ADimport%E5%92%8Cfrom-import%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2019-12-24T02:26:13.000Z</published>
    <updated>2019-12-24T03:39:27.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><a id="more"></a><p>1.函数可以将通用的代码封装起来，便于其他程序或者方法调用。将函数存放在文件中，这个文件被称为模块。将函数存储在独立的模块中，可与其他程序员共享这些文件而不是整个程序。<br>2.使用as给导入的函数、模块指定别名</p><h2 id="from-A-import-b导入"><a href="#from-A-import-b导入" class="headerlink" title="from A import b导入:"></a>from A import b导入:</h2><blockquote><p>1.将模块对象的引用保存在本地作用域, 也就是说当前作用域有一个名字叫b的对象,locals()可以查看;(类似浅复制)<br>  2.可以选择导入需要的函数;from A import *可以导入模块中所有函数<br>  3.通过该方式导入时会跳过私有属性、不能访问私有属性(__)<br>  4.通过该方式导入,可以直接调用<br>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> A <span class="keyword">import</span> b,c</span><br><span class="line">  c()</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="import-A-导入"><a href="#import-A-导入" class="headerlink" title="import A 导入:"></a>import A 导入:</h2><blockquote><p>1.引用模块对象(只是单纯的指向A,操作的还是A中内容)<br>  2.导入模块中所有函数<br>  3.通过该方式导入可以通过引用访问私有属性<br>  4.通过该方式导入需要用模块名调函数<br> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> A <span class="keyword">as</span> D</span><br><span class="line">D.b()</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h2&gt;
    
    </summary>
    
    
      <category term="其他编程语言" scheme="https://wyadong.github.io/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="https://wyadong.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>摄影知识</title>
    <link href="https://wyadong.github.io/2019/12/19/%E6%91%84%E5%BD%B1/"/>
    <id>https://wyadong.github.io/2019/12/19/%E6%91%84%E5%BD%B1/</id>
    <published>2019-12-19T11:00:59.000Z</published>
    <updated>2019-12-19T12:23:05.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="构图"><a href="#构图" class="headerlink" title="构图"></a>构图</h2><a id="more"></a><h4 id="常用构图"><a href="#常用构图" class="headerlink" title="常用构图"></a>常用构图</h4><blockquote><p>1.黄金分割构图<br>  2.三分法构图<br>  4.斜线构图<br>  5.对称构图<br>  6.低角度构图<br>    拍摄这样的照片比较具有挑战性，你需要蹲着、坐下、跪着或者躺下才能来贴紧地面拍摄照片。但是这样做非常值得，因为它能给你带来非同寻常的视觉体验。<br>  7.仰视构图<br>  8.俯视构图</p></blockquote><h4 id="其他构图方式"><a href="#其他构图方式" class="headerlink" title="其他构图方式"></a>其他构图方式</h4><blockquote><p>9.s型构图<br>  10.引导线构图<br>  11.框式构图<br>  12.中心式构图<br>  13.反射式构图<br>  14.穿透式构图</p></blockquote><h2 id="色彩选择"><a href="#色彩选择" class="headerlink" title="色彩选择"></a>色彩选择</h2><blockquote><p>1.色相:色彩的相貌<br>2.饱和度:色彩的鲜艳程度<br>3.明度:颜色的亮度</p></blockquote><p>一般用互补色:加强视觉上的饱和度,色相纯度表现更强烈.如下图:<br><img src="/2019/12/19/摄影/对比色.jpg" title="对比色图"></p><h2 id="用光"><a href="#用光" class="headerlink" title="用光"></a>用光</h2><h4 id="顺光"><a href="#顺光" class="headerlink" title="顺光"></a>顺光</h4><blockquote><p>优点：在这样的光线环境下，主体色彩以及形态等细节特征都可以得到很好的表现。<br>缺点：顺光拍摄会使主体没有明显的明暗变化，从而缺乏层次感和##### 立体感，使画面表现略显平淡。<br>        小技巧：可以为画面安排一些前景，来增加画面的空间感。</p></blockquote><h4 id="测光"><a href="#测光" class="headerlink" title="测光"></a>测光</h4><p>光在主体上留下明暗区域.让主体呈现更明显的层次感<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">1.前测光:常用于拍摄建筑、人像、花卉题材,前45度光线</span></span><br><span class="line">2.侧逆光</span><br></pre></td></tr></table></figure></p><h4 id="逆光"><a href="#逆光" class="headerlink" title="逆光"></a>逆光</h4><p>拍摄难度大,但能排出大片;剪影也常用逆光.可以利用反光板或者灯具对人物面部进行补光，可以获得温暖清新的逆光效果。</p><h4 id="顶光"><a href="#顶光" class="headerlink" title="顶光"></a>顶光</h4><p>顶光在拍摄静物题材等需要表现被摄主体顶部细节的时候使用。</p><h4 id="脚光"><a href="#脚光" class="headerlink" title="脚光"></a>脚光</h4><p>脚光的视觉效果会下意识给人一种神秘、阴森、诡异的感觉。</p><h2 id="后期处理"><a href="#后期处理" class="headerlink" title="后期处理"></a>后期处理</h2><blockquote><p>1.亮度 : 画面整体的明暗程度<br>2.对比度 : 画面对比程度,让亮部更亮,暗部更暗<br>3.饱和度 : 画面整体颜色的浓郁程度<br>4.氛围 : 综合画面的光线,恢复亮部与暗部的细节<br>5.高光 : 控制画面中较亮的部分<br>6.阴影 : 控制画面中亮度较低的部分<br>7.暖色调 : 调整画面的冷暖色调</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;构图&quot;&gt;&lt;a href=&quot;#构图&quot; class=&quot;headerlink&quot; title=&quot;构图&quot;&gt;&lt;/a&gt;构图&lt;/h2&gt;
    
    </summary>
    
    
      <category term="记录" scheme="https://wyadong.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="生活技巧" scheme="https://wyadong.github.io/tags/%E7%94%9F%E6%B4%BB%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>id、instancetype、__kindof</title>
    <link href="https://wyadong.github.io/2019/12/19/id%E3%80%81instancetype%E3%80%81__kindof/"/>
    <id>https://wyadong.github.io/2019/12/19/id%E3%80%81instancetype%E3%80%81__kindof/</id>
    <published>2019-12-19T03:42:43.000Z</published>
    <updated>2019-12-24T03:34:21.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="instancetype"><a href="#instancetype" class="headerlink" title="instancetype"></a>instancetype</h2><a id="more"></a><blockquote><p>关联返回类型(related result types):<br> 根据Cocoa的命名规则，满足下述规则的方法被称为是关联返回类型的方法：<br> 1.类方法中，以alloc或new开头且返回一个方法所在类类型的对象<br> 2.实例方法中，以autorelease，init，retain或self开头且返回一个方法所在类类型的对象</p></blockquote><p>从xcode5开始支持instancetype.<br>instancetype的作用，就是使(关联返回类型或非关联返回类型)方法返回所在类的类型！<br><a href="https://blog.csdn.net/wzzvictory/article/details/16994913" target="_blank" rel="noopener">参考:https://blog.csdn.net/wzzvictory/article/details/16994913</a></p><h4 id="id-amp-instancetype"><a href="#id-amp-instancetype" class="headerlink" title="id &amp; instancetype"></a>id &amp; instancetype</h4><blockquote><p>1.相同点<br> 都可以作为方法的返回类型<br> 2.不同点<br> ①instancetype可以返回和方法所在类相同类型的对象，id只能返回未知类型的对象;<br> ②instancetype只能作为返回值，不能像id那样作为参数<br> ③instancetype在编译的时候判断对象的真实类型,id在编译的时候不能判断对象的真实类型</p></blockquote><h2 id="kindof"><a href="#kindof" class="headerlink" title="__kindof"></a>__kindof</h2><blockquote><p><strong>kindof是iOS9(xcode7)出来的关键字,表示当前类或者它的子类.<br> 1.</strong>kindof在编译的时候判断对象的真实类型.<br> 2.__kindof可以修饰参数</p></blockquote><p>主要代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@interface People : NSObject</span><br><span class="line">-(id)idPeople;</span><br><span class="line">-(instancetype)instancetyPepeople;</span><br><span class="line">-(__kindof People*)kindofPepeople;</span><br><span class="line"></span><br><span class="line">-(instancetype)instancetyMan;</span><br><span class="line">-(__kindof People *)kindofMan;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation People</span><br><span class="line">-(id)idPeople&#123;</span><br><span class="line">    return [[People alloc] init];</span><br><span class="line">&#125;</span><br><span class="line">-(instancetype)instancetyPepeople&#123;</span><br><span class="line">    return [[People alloc] init];</span><br><span class="line">&#125;</span><br><span class="line">-(__kindof People*)kindofPepeople&#123;</span><br><span class="line">     return [[People alloc] init];</span><br><span class="line">&#125;</span><br><span class="line">-(instancetype)instancetyMan&#123;</span><br><span class="line">    return [[Man alloc] init];</span><br><span class="line">&#125;</span><br><span class="line">-(__kindof People*)kindofMan&#123;</span><br><span class="line">     return [[Man alloc] init];</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">//Man为People子类</span><br><span class="line">@interface Man : People</span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p><p>test代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">调用如下:</span><br><span class="line">People *p = [[People alloc] init];</span><br><span class="line">p = [p idPeople];</span><br><span class="line">p = [p instancetyPepeople];</span><br><span class="line">p = [p kindofPepeople];</span><br><span class="line">    </span><br><span class="line">People *mp = [p instancetyMan];</span><br><span class="line">Man *m = [p instancetyMan];//编译器警告如下:</span><br><span class="line">//Incompatible pointer types initializing &apos;Man *&apos; with an expression of type &apos;People *&apos;</span><br><span class="line">    </span><br><span class="line"> People *kp = [p kindofMan];</span><br><span class="line"> Man *km = [p kindofMan];</span><br></pre></td></tr></table></figure></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><blockquote><p>自定义构造方法, 返回值尽量使用instancetype, 不要使用id<br> __kindof能使代码结构更清晰,建议使用</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;instancetype&quot;&gt;&lt;a href=&quot;#instancetype&quot; class=&quot;headerlink&quot; title=&quot;instancetype&quot;&gt;&lt;/a&gt;instancetype&lt;/h2&gt;
    
    </summary>
    
    
      <category term="手机开发" scheme="https://wyadong.github.io/categories/%E6%89%8B%E6%9C%BA%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="OC" scheme="https://wyadong.github.io/tags/OC/"/>
    
      <category term="IOS" scheme="https://wyadong.github.io/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>分类标签</title>
    <link href="https://wyadong.github.io/2019/12/13/%E5%88%86%E7%B1%BB%E6%A0%87%E7%AD%BE/"/>
    <id>https://wyadong.github.io/2019/12/13/%E5%88%86%E7%B1%BB%E6%A0%87%E7%AD%BE/</id>
    <published>2019-12-13T07:56:23.000Z</published>
    <updated>2019-12-24T03:27:53.580Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">博主不想公开。请输入密码后摁《回车键》,查看文章。</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="353a25ead08f8300e9e15bd13689661076de849506f3866c8a3cd72208b2194f">483077ffa970f7e56832a7712140629f935535b65ffcfab52e8e74488414c9604378c01629f6ff39231798293fb2448e0d7998047a425c5ad2f86e6432338517ee868b88763ede6ed08c2641682f75ccc3b37d579df0ecdaa824a4c51542577a72b689399fd0f85b7b34d8ceec5e9ebe358c71b461b0f34695895b83cc2b8ea2ed488a78a20c5a93345dd33c9486775055ac9c9097383a6b5b8d7e2b883b32c4aeb5f3fbfce530e6d42ca27ba94234cb43b34120b5fff32a089f7035396f4ee03282f08bfb0c11142a27ecd8a750a77fb62670795fdfacbffc05edac7dd52ff6e4b0b20ddaad3672983a30f858c369a66b454bd25f80d8a967f51c1a8c141729bdd156727d613d9f9255c8a1fe0a1e5adf5d4c2349dc7aee5b5a64c04f5e9c2413cd8cde203695da5a777c0b3fe358791a912a3708dfe873494e63de3721a1d72c1364be372b85ccbe9e22e0fdd9b2540ca4fec0bb0246fe91ea77fe41df2cd670d08dd169b034db6e92b3c2561d7397f189d695415316c26819161a67233936c030d08ac1ac5d5a5f0aee7e207f1164955abd12101bbaef63cc32e7ee8cf119e697c0772fd50bd6d7086328e3526fa6be5ebc8e322d44a1acfce4146afdc947b798fad09008ef2607c080734973a9a5bcaa788b94d4f11f8de4519d15a6d105873a72ddfc0f780ae4dd1c1a6bd9181d371abbd9eb2e1cf34da13867d2fa8a19b9eab1bf682341b3df7a68161dbb17bece8f3627981e4dfa8209d33ee3effa9d321aa8a96b0eacc5046a1627c146b76c3477c613c8a2e650d30d952f80e77dfce35460b3001c5daa947d38947d867ff68d54989f33fb2b0c0fe6b561c449384c195f807ddae6481fcb3bd549f51fbc4a23f3b5b586e3a9d0bf1b3d4e1fc4771cf4a40d378cf3a49d5c87f12d9464f2ce3429e71928926b146415eebe6f89b49d8df83769f1554cc4ebc8594b4eaf55ae98fc40bab46c00034da72769f59e18ce884572e06a5f96dffc14cbaf6372436571a648e6166007ff7452754667aaef34e9b806f62e4cf4d30c87a46f9d04f24aaded799f0c4f53ffe804702055b6d432</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇个人记录型文章,博主不想公开。如果你确实想看，请与博主联系。
    
    </summary>
    
    
      <category term="记录" scheme="https://wyadong.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="内容记录" scheme="https://wyadong.github.io/tags/%E5%86%85%E5%AE%B9%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>macdown语法</title>
    <link href="https://wyadong.github.io/2018/04/11/macdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://wyadong.github.io/2018/04/11/macdown%E8%AF%AD%E6%B3%95/</id>
    <published>2018-04-11T09:01:10.000Z</published>
    <updated>2019-12-24T03:28:50.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><a id="more"></a><blockquote><p>​<code># 一级标题​</code><br>​<code>## 二级标题​</code><br>​<code>###三级标题​</code><br>​<code>#### 四级标题​</code><br>​<code>##### 五级标题​</code><br>​<code>###### 六级标题​</code></p></blockquote><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h2 id="2-粗体、斜体、删除线"><a href="#2-粗体、斜体、删除线" class="headerlink" title="2.粗体、斜体、删除线"></a>2.粗体、斜体、删除线</h2><blockquote><p><code>*斜体*</code><br><code>**粗体**</code><br><code>***加粗斜体***</code><br><code>~~删除线~~</code></p></blockquote><blockquote><p><em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p></blockquote><h2 id="3-引用块"><a href="#3-引用块" class="headerlink" title="3.引用块"></a>3.引用块</h2><p><code>&gt; 文字引用</code></p><blockquote><p>文字引用</p></blockquote><h2 id="4-代码块"><a href="#4-代码块" class="headerlink" title="4.代码块"></a>4.代码块</h2><blockquote><p>  ` 行内代码` </p></blockquote><blockquote><p> <code>行内代码</code></p></blockquote><blockquote><p>​` ` `<br>  多行代码 ` ` ` </p></blockquote><p>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">多行代码</span><br></pre></td></tr></table></figure></p><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><blockquote><p>​<code>---​</code><br>​<code>***​</code></p></blockquote><blockquote><hr><hr></blockquote><h2 id="6-列表"><a href="#6-列表" class="headerlink" title="6.列表"></a>6.列表</h2><blockquote><p>​<code>1. 有序列表项​</code></p></blockquote><blockquote><p>​<code>* 无序列表项​</code><br>​<code>+ 无序列表项​</code><br>​<code>- 无序列表项​</code></p></blockquote><blockquote><ol><li>有序列表项</li></ol></blockquote><blockquote><ul><li>无序列表项</li></ul><ul><li>无序列表项</li></ul><ul><li>无序列表项</li></ul></blockquote><h2 id="7-表格"><a href="#7-表格" class="headerlink" title="7.表格"></a>7.表格</h2><p>​ <code>表头1|表头2​</code><br>​ <code>-|-|-​</code><br>​ <code>内容11|内容12​</code><br>​ <code>内容21|内容22​</code></p><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>内容11</td><td>内容12</td></tr><tr><td>内容21</td><td>内容22</td></tr></tbody></table><h2 id="8-超链接"><a href="#8-超链接" class="headerlink" title="8.超链接"></a>8.超链接</h2><blockquote><p>​ <code>方法一：[链接文字](链接地址 &quot;链接描述&quot;)​</code><br>​ 例如：<a href="https://www.example.com/" title="示例链接" target="_blank" rel="noopener">示例链接</a></p></blockquote><blockquote><p>​ <code>方法二：​&lt;链接地址&gt;​</code><br>​ 例如：<a href="https://www.example.com/" target="_blank" rel="noopener">https://www.example.com/</a></p></blockquote><h2 id="9-图片"><a href="#9-图片" class="headerlink" title="9.图片"></a>9.图片</h2><blockquote><p>​ <code>![图片文字](图片地址 &quot;图片描述&quot;)</code></p></blockquote><blockquote><p>​ <code>![图片名称](图片网址)</code></p></blockquote><blockquote><p>​ 例如：<img src="http://tupian.qqjay.com/tou2/2019/0912/119e24c50ce3e1b3000d6fcd13bff484.jpg" alt="示例图片"></p></blockquote><h2 id="10-注释"><a href="#10-注释" class="headerlink" title="10.注释"></a>10.注释</h2><blockquote><p>​ <code>[comment]: 注释内容</code><br>​ <code>&lt;!-- 注释内容  --&gt;</code></p></blockquote><blockquote><p>​ <code>&lt;!-- 例子:  --&gt;</code><br>​ <code>[//]: 你好</code><br>​ <!-- 例子:  --></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1.标题&quot;&gt;&lt;/a&gt;1.标题&lt;/h2&gt;
    
    </summary>
    
    
      <category term="前端开发" scheme="https://wyadong.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="macdown" scheme="https://wyadong.github.io/tags/macdown/"/>
    
  </entry>
  
</feed>
